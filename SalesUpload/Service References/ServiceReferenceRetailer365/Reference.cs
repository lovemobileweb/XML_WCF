//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SalesUpload.ServiceReferenceRetailer365 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResponse", Namespace="http://schemas.datacontract.org/2004/07/iRealz.Tenant365.Service")]
    [System.SerializableAttribute()]
    public partial class ServiceResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReturnMessageOfboolean", Namespace="http://schemas.datacontract.org/2004/07/iRealz.Message")]
    [System.SerializableAttribute()]
    public partial class ReturnMessageOfboolean : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private SalesUpload.ServiceReferenceRetailer365.ErrorItem[] ErrorListk__BackingFieldField;
        
        private SalesUpload.ServiceReferenceRetailer365.CustomExceptionError ExceptionErrork__BackingFieldField;
        
        private bool HasExpectionk__BackingFieldField;
        
        private bool IsSuccessk__BackingFieldField;
        
        private string Messagek__BackingFieldField;
        
        private bool Valuek__BackingFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ErrorList>k__BackingField", IsRequired=true)]
        public SalesUpload.ServiceReferenceRetailer365.ErrorItem[] ErrorListk__BackingField {
            get {
                return this.ErrorListk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorListk__BackingFieldField, value) != true)) {
                    this.ErrorListk__BackingFieldField = value;
                    this.RaisePropertyChanged("ErrorListk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ExceptionError>k__BackingField", IsRequired=true)]
        public SalesUpload.ServiceReferenceRetailer365.CustomExceptionError ExceptionErrork__BackingField {
            get {
                return this.ExceptionErrork__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionErrork__BackingFieldField, value) != true)) {
                    this.ExceptionErrork__BackingFieldField = value;
                    this.RaisePropertyChanged("ExceptionErrork__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<HasExpection>k__BackingField", IsRequired=true)]
        public bool HasExpectionk__BackingField {
            get {
                return this.HasExpectionk__BackingFieldField;
            }
            set {
                if ((this.HasExpectionk__BackingFieldField.Equals(value) != true)) {
                    this.HasExpectionk__BackingFieldField = value;
                    this.RaisePropertyChanged("HasExpectionk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<IsSuccess>k__BackingField", IsRequired=true)]
        public bool IsSuccessk__BackingField {
            get {
                return this.IsSuccessk__BackingFieldField;
            }
            set {
                if ((this.IsSuccessk__BackingFieldField.Equals(value) != true)) {
                    this.IsSuccessk__BackingFieldField = value;
                    this.RaisePropertyChanged("IsSuccessk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Message>k__BackingField", IsRequired=true)]
        public string Messagek__BackingField {
            get {
                return this.Messagek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Messagek__BackingFieldField, value) != true)) {
                    this.Messagek__BackingFieldField = value;
                    this.RaisePropertyChanged("Messagek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Value>k__BackingField", IsRequired=true)]
        public bool Valuek__BackingField {
            get {
                return this.Valuek__BackingFieldField;
            }
            set {
                if ((this.Valuek__BackingFieldField.Equals(value) != true)) {
                    this.Valuek__BackingFieldField = value;
                    this.RaisePropertyChanged("Valuek__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomExceptionError", Namespace="http://schemas.datacontract.org/2004/07/iRealz.Message")]
    [System.SerializableAttribute()]
    public partial class CustomExceptionError : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long LogIDk__BackingFieldField;
        
        private string Messagek__BackingFieldField;
        
        private string StackTracek__BackingFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<LogID>k__BackingField", IsRequired=true)]
        public long LogIDk__BackingField {
            get {
                return this.LogIDk__BackingFieldField;
            }
            set {
                if ((this.LogIDk__BackingFieldField.Equals(value) != true)) {
                    this.LogIDk__BackingFieldField = value;
                    this.RaisePropertyChanged("LogIDk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Message>k__BackingField", IsRequired=true)]
        public string Messagek__BackingField {
            get {
                return this.Messagek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Messagek__BackingFieldField, value) != true)) {
                    this.Messagek__BackingFieldField = value;
                    this.RaisePropertyChanged("Messagek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<StackTrace>k__BackingField", IsRequired=true)]
        public string StackTracek__BackingField {
            get {
                return this.StackTracek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTracek__BackingFieldField, value) != true)) {
                    this.StackTracek__BackingFieldField = value;
                    this.RaisePropertyChanged("StackTracek__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ErrorItem", Namespace="http://schemas.datacontract.org/2004/07/iRealz.Message")]
    [System.SerializableAttribute()]
    public partial class ErrorItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string ErrorReasonk__BackingFieldField;
        
        private string ErrorRecordk__BackingFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ErrorReason>k__BackingField", IsRequired=true)]
        public string ErrorReasonk__BackingField {
            get {
                return this.ErrorReasonk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorReasonk__BackingFieldField, value) != true)) {
                    this.ErrorReasonk__BackingFieldField = value;
                    this.RaisePropertyChanged("ErrorReasonk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ErrorRecord>k__BackingField", IsRequired=true)]
        public string ErrorRecordk__BackingField {
            get {
                return this.ErrorRecordk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorRecordk__BackingFieldField, value) != true)) {
                    this.ErrorRecordk__BackingFieldField = value;
                    this.RaisePropertyChanged("ErrorRecordk__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceRetailer365.IwcfRetailer365")]
    public interface IwcfRetailer365 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IwcfRetailer365/SchedulerCSVSalesSubmission", ReplyAction="http://tempuri.org/IwcfRetailer365/SchedulerCSVSalesSubmissionResponse")]
        SalesUpload.ServiceReferenceRetailer365.ServiceResponse SchedulerCSVSalesSubmission(string[] csvContent, string Login_UserID, string Activation_Key, string FunctionID, string ModuleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IwcfRetailer365/SchedulerCSVSalesSubmission", ReplyAction="http://tempuri.org/IwcfRetailer365/SchedulerCSVSalesSubmissionResponse")]
        System.Threading.Tasks.Task<SalesUpload.ServiceReferenceRetailer365.ServiceResponse> SchedulerCSVSalesSubmissionAsync(string[] csvContent, string Login_UserID, string Activation_Key, string FunctionID, string ModuleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IwcfRetailer365/SchedulerTestSalesSubmission", ReplyAction="http://tempuri.org/IwcfRetailer365/SchedulerTestSalesSubmissionResponse")]
        SalesUpload.ServiceReferenceRetailer365.ServiceResponse SchedulerTestSalesSubmission(string[] csvContent, string Login_UserID, string Activation_Key, string FunctionID, string ModuleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IwcfRetailer365/SchedulerTestSalesSubmission", ReplyAction="http://tempuri.org/IwcfRetailer365/SchedulerTestSalesSubmissionResponse")]
        System.Threading.Tasks.Task<SalesUpload.ServiceReferenceRetailer365.ServiceResponse> SchedulerTestSalesSubmissionAsync(string[] csvContent, string Login_UserID, string Activation_Key, string FunctionID, string ModuleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IwcfRetailer365/TestSalesSubmission", ReplyAction="http://tempuri.org/IwcfRetailer365/TestSalesSubmissionResponse")]
        SalesUpload.ServiceReferenceRetailer365.ServiceResponse TestSalesSubmission(string[] Sales_Data, string Login_UserID, string Activation_Key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IwcfRetailer365/TestSalesSubmission", ReplyAction="http://tempuri.org/IwcfRetailer365/TestSalesSubmissionResponse")]
        System.Threading.Tasks.Task<SalesUpload.ServiceReferenceRetailer365.ServiceResponse> TestSalesSubmissionAsync(string[] Sales_Data, string Login_UserID, string Activation_Key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IwcfRetailer365/SalesSubmission", ReplyAction="http://tempuri.org/IwcfRetailer365/SalesSubmissionResponse")]
        SalesUpload.ServiceReferenceRetailer365.ServiceResponse SalesSubmission(string[] Sales_Data, string Login_UserID, string Activation_Key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IwcfRetailer365/SalesSubmission", ReplyAction="http://tempuri.org/IwcfRetailer365/SalesSubmissionResponse")]
        System.Threading.Tasks.Task<SalesUpload.ServiceReferenceRetailer365.ServiceResponse> SalesSubmissionAsync(string[] Sales_Data, string Login_UserID, string Activation_Key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IwcfRetailer365/AuthenticateActivationKey", ReplyAction="http://tempuri.org/IwcfRetailer365/AuthenticateActivationKeyResponse")]
        SalesUpload.ServiceReferenceRetailer365.ReturnMessageOfboolean AuthenticateActivationKey(string login_userID, string activationKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IwcfRetailer365/AuthenticateActivationKey", ReplyAction="http://tempuri.org/IwcfRetailer365/AuthenticateActivationKeyResponse")]
        System.Threading.Tasks.Task<SalesUpload.ServiceReferenceRetailer365.ReturnMessageOfboolean> AuthenticateActivationKeyAsync(string login_userID, string activationKey);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IwcfRetailer365Channel : SalesUpload.ServiceReferenceRetailer365.IwcfRetailer365, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IwcfRetailer365Client : System.ServiceModel.ClientBase<SalesUpload.ServiceReferenceRetailer365.IwcfRetailer365>, SalesUpload.ServiceReferenceRetailer365.IwcfRetailer365 {
        
        public IwcfRetailer365Client() {
        }
        
        public IwcfRetailer365Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IwcfRetailer365Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IwcfRetailer365Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IwcfRetailer365Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SalesUpload.ServiceReferenceRetailer365.ServiceResponse SchedulerCSVSalesSubmission(string[] csvContent, string Login_UserID, string Activation_Key, string FunctionID, string ModuleID) {
            return base.Channel.SchedulerCSVSalesSubmission(csvContent, Login_UserID, Activation_Key, FunctionID, ModuleID);
        }
        
        public System.Threading.Tasks.Task<SalesUpload.ServiceReferenceRetailer365.ServiceResponse> SchedulerCSVSalesSubmissionAsync(string[] csvContent, string Login_UserID, string Activation_Key, string FunctionID, string ModuleID) {
            return base.Channel.SchedulerCSVSalesSubmissionAsync(csvContent, Login_UserID, Activation_Key, FunctionID, ModuleID);
        }
        
        public SalesUpload.ServiceReferenceRetailer365.ServiceResponse SchedulerTestSalesSubmission(string[] csvContent, string Login_UserID, string Activation_Key, string FunctionID, string ModuleID) {
            return base.Channel.SchedulerTestSalesSubmission(csvContent, Login_UserID, Activation_Key, FunctionID, ModuleID);
        }
        
        public System.Threading.Tasks.Task<SalesUpload.ServiceReferenceRetailer365.ServiceResponse> SchedulerTestSalesSubmissionAsync(string[] csvContent, string Login_UserID, string Activation_Key, string FunctionID, string ModuleID) {
            return base.Channel.SchedulerTestSalesSubmissionAsync(csvContent, Login_UserID, Activation_Key, FunctionID, ModuleID);
        }
        
        public SalesUpload.ServiceReferenceRetailer365.ServiceResponse TestSalesSubmission(string[] Sales_Data, string Login_UserID, string Activation_Key) {
            return base.Channel.TestSalesSubmission(Sales_Data, Login_UserID, Activation_Key);
        }
        
        public System.Threading.Tasks.Task<SalesUpload.ServiceReferenceRetailer365.ServiceResponse> TestSalesSubmissionAsync(string[] Sales_Data, string Login_UserID, string Activation_Key) {
            return base.Channel.TestSalesSubmissionAsync(Sales_Data, Login_UserID, Activation_Key);
        }
        
        public SalesUpload.ServiceReferenceRetailer365.ServiceResponse SalesSubmission(string[] Sales_Data, string Login_UserID, string Activation_Key) {
            return base.Channel.SalesSubmission(Sales_Data, Login_UserID, Activation_Key);
        }
        
        public System.Threading.Tasks.Task<SalesUpload.ServiceReferenceRetailer365.ServiceResponse> SalesSubmissionAsync(string[] Sales_Data, string Login_UserID, string Activation_Key) {
            return base.Channel.SalesSubmissionAsync(Sales_Data, Login_UserID, Activation_Key);
        }
        
        public SalesUpload.ServiceReferenceRetailer365.ReturnMessageOfboolean AuthenticateActivationKey(string login_userID, string activationKey) {
            return base.Channel.AuthenticateActivationKey(login_userID, activationKey);
        }
        
        public System.Threading.Tasks.Task<SalesUpload.ServiceReferenceRetailer365.ReturnMessageOfboolean> AuthenticateActivationKeyAsync(string login_userID, string activationKey) {
            return base.Channel.AuthenticateActivationKeyAsync(login_userID, activationKey);
        }
    }
}
